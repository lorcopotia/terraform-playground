#cloud-config
hostname: ${hostname}
fqdn: ${fqdn}
manage_etc_hosts: true
users:
  - name: automation
    sudo: ALL=(ALL) NOPASSWD:ALL
    groups: users, admin
    home: /home/automation
    shell: /bin/bash
    lock_passwd: false
    ssh-authorized-keys:
      - ${file("/home/dunix/.ssh/id_rsa.pub")}
# only cert auth via ssh (console access can still login)
ssh_pwauth: yes
disable_root: false
chpasswd:
  list: |
     automation:devops
  expire: False
#run yum upgrade
package_update: true
package_upgrade: true

#install repo for ansible
yum_repos:
  # The name of the repository
  epel:
    name: Extra Packages for Enterprise Linux 7 - $basearch
    baseurl: http://download.fedoraproject.org/pub/epel/7/$basearch
    metalinkr: https://mirrors.fedoraproject.org/metalink?repo=epel-7&arch=$basearch
    failovermethod: priority
    enabled: 1
    gpgcheck: 0
    gpgkey: file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-7
  epel-debuginfo:
    name: Extra Packages for Enterprise Linux 7 - $basearch - Debug
    baseurl: http://download.fedoraproject.org/pub/epel/7/$basearch/debug
    metalink: https://mirrors.fedoraproject.org/metalink?repo=epel-debug-7&arch=$basearch
    failovermethod: priority
    enabled: 1
    gpgkey: file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-7
    gpgcheck: 0

# Default Packages
packages:
  - wget
  - git
  - net-tools
  - bind-utils
  - yum-utils
  - iptables-services
  - bridge-utils
  - bash-completion
  - kexec-tools
  - sos
  - psacct
  - ansible
  - pyOpenSSL

# Run some commands
runcmd:
  - [ yum, -y, remove, cloud-init ]

# configure interaction with ssh server
ssh_svcname: ssh        # The name of the SSH service, used with "service restart". Defaults to "ssh".
ssh_deletekeys: True    # When set to "true", existing ssh keys will be deleted on first boot on a per-instance basis.
ssh_genkeytypes: ['rsa', 'ecdsa']         # A list of the ssh key types that should be generated. These are passed to 'ssh-keygen -t'

# written to /var/log/cloud-init-output.log
final_message: "The system is finall up, after $UPTIME seconds"
